import { useEffect } from "react";
import Head from "next/head";
import { MongoClient } from "mongodb";

import Card from "../components/ui/Card";
import AllPost from "../components/posts/allposts";
// import { useCurrentUser } from "@/hooks/index";

function HomePage(props) {
  useEffect(() => {
    const card = document.querySelectorAll(".link-card");
    const clickableElements = document.querySelectorAll(".clickable");
    // console.log(props.posts);

    clickableElements.forEach((ele) =>
      ele.addEventListener("click", (e) => e.stopPropagation())
    );

    for (let i = 0; i < card.length; i++) {
      card[i].addEventListener("click", function () {
        // link to be trigger
        let link = this.querySelectorAll(".article-link");
        const isTextSelected = window.getSelection().toString();
        if (!isTextSelected) {
          link[0].click();
        }
      });
    }
  }, []);
  return (
    <>
      <Head>
        <title>Dev.to</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Card>
        {props.posts.map((post) => (
          <AllPost posts={post} key={post.id} />
        ))}
      </Card>
    </>
  );
}

export async function getServerSideProps() {
  // fetch data from an API
  const client = await MongoClient.connect(
    "mongodb://localhost/restful_blog_appv3",
    { useNewUrlParser: true, useUnifiedTopology: true }
  );
  const db = client.db();

  const postsCollection = db.collection("posts");

  const posts = await postsCollection
    .find({})
    .project({
      body: 0,
      comments: 0,
    })
    .sort({ created: -1 })
    .toArray();

  // console.log(posts);

  client.close();

  return {
    props: {
      posts: posts.map((posts) => ({
        title: posts.title,
        image: posts.image[0] ? posts.image[0].url : null,
        imageUrl: posts.imageUrl ? posts.imageUrl : null,
        id: posts._id.toString(),
        userProfile: {
          id: posts.userProfile.id.toString(),
          name: posts.userProfile.name,
          profileImage: posts.userProfile.profileImage,
          profileGenericPic: posts.userProfile.profileGenericPic,
        },
        created: posts.created.toDateString(),
      })),
    },
  };
}

export default HomePage;
